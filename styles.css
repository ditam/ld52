html {
  /* There's a weird bug in Firefox where the linear-gradient bg of body is not displayed
     without explicit sizing here (probably because of no sized visible content?) */
  min-height: 100%;
  min-width: 100%;
}

body {
  /* The above FF hack would mess with the cursor rules if this is not stretched. */
  width: 100vw;
  height: 100vh;

  background: rgb(4,32,37);
  background: linear-gradient(126deg, rgba(4,32,37,1) 0%, rgba(4,9,50,1) 66%, rgba(2,0,22,1) 100%);

  /* initial cursor until the game starts */
  cursor: url(cursor-picker.png) 8 8, pointer;
}

body.red {
  cursor: url(cursor-red.png) 8 8, pointer;
}
body.green {
  cursor: url(cursor-green.png) 8 8, pointer;
}
body.blue {
  cursor: url(cursor-blue.png) 8 8, pointer;
}
body.sienna {
  cursor: url(cursor-brown.png) 8 8, pointer;
}
body.gray {
  cursor: url(cursor-gray.png) 8 8, pointer;
}

body.loading {
  cursor: url(cursor-loading.png) 8 8, pointer;
}

#picker {
  position: absolute;
  width: 35px;
  height: 35px;
  cursor: url(cursor-picker.png) 8 8, pointer;
  border: 1px solid #b380340a;

  transition: top 0.7s, left 0.7s, background-color 0.1s;
}

#picker:hover {
  border: 1px solid #b3803465;
}

#container {
  position: absolute;
  /* top and left from JS */
}

.cell {
  width: 35px;
  height: 35px;
  display: inline-block;
  border: 1px solid #d5a2224d;
  margin-right: 8px;
  margin-bottom: 8px;
}

.cell:hover {
  background-color: #b3803440;
  border-color: #997447;
}

#target-score {
  position: absolute;
  /* top and left from JS */

  color: gold;
}

.score-cell {
  display: inline-block;
  width: 8px;
  height: 35px;
  border: 1px solid #80808017;
  margin-right: 3px;
  margin-bottom: 3px;
}

.score-cell.filled {
  background-color: gold;
  opacity: 0.4;
}

.flair {
  overflow: hidden;
  position: relative;
}
.flair:after {
  background: #fff;
  content: "";
  height: 155px;
  left: -75px;
  opacity: 0.1;
  position: absolute;
  top: -50px;
  transform: rotate(35deg);
  transition: all 420ms cubic-bezier(0.2, 1, 0.2, 1);
  width: 50px;
  z-index: -1;
}
.flair:hover:after {
  left: 150%;
  transition: all 250ms cubic-bezier(0.2, 1, 0.2, 1);
}

#colorblind-toggle {
  position: absolute;
  left: 20px;
  bottom: 20px;
  width: 32px;
  height: 32px;
  opacity: 0.2;

  background-size: contain;
  background-repeat: no-repeat;

  cursor: pointer;
}

#colorblind-toggle:hover {
  opacity: 1;
}

#colorblind-toggle.off {
  background-image: url(icon-colorblind-off.png);
}
#colorblind-toggle.on {
  background-image: url(icon-colorblind-on.png);
}

#colorblind-toggle.off:hover::after {
  color: white;
  opacity: 0.3;
  content: 'Colorblind palette is OFF.';
  width: 300px;
  position: absolute;
  left: 38px;
  line-height: 32px;
  font-size: 16px;
  font-family: sans-serif;
}
#colorblind-toggle.on:hover::after {
  color: white;
  opacity: 0.3;
  content: 'Colorblind palette is ON.';
  width: 300px;
  position: absolute;
  left: 38px;
  line-height: 32px;
  font-size: 16px;
  font-family: sans-serif;
}

/*
  UI colors are defined by color-named classes.
  This allows decoupling the internal names from the colors,
  and easily switching between standard and colorblind-friendly color schemes.
*/

#picker.blank, .cell.blank {
  background-color: transparent;
}

#picker.red, .cell.red {
  background-color: red;
}
#picker.green, .cell.green {
  background-color: green;
}
#picker.blue, .cell.blue {
  background-color: blue;
}
#picker.brown, .cell.brown {
  background-color: sienna;
}
#picker.gray, .cell.gray {
  background-color: gray;
}
#picker.gold, .cell.gold {
  background-color: gold;
}

/*
  The colorbind scheme is Paul Tol's "Bright" qualitative colour scheme:
  https://personal.sron.nl/~pault/
*/
body.cb-scheme #picker.red, body.cb-scheme .cell.red {
  background-color: #EE6677;
}
body.cb-scheme #picker.green, body.cb-scheme .cell.green {
  background-color: #228833;
}
body.cb-scheme #picker.blue, body.cb-scheme .cell.blue {
  background-color: #4477AA;
}
body.cb-scheme #picker.brown, body.cb-scheme .cell.brown {
  background-color: #AA3377;
}
body.cb-scheme #picker.gray, body.cb-scheme .cell.gray {
  background-color: #BBBBBB;
}
body.cb-scheme #picker.gold, body.cb-scheme .cell.gold {
  background-color: #CCBB44;
}
